// Copyright (c) Six Labors and contributors.
// Licensed under the Apache License, Version 2.0.

using System;
using System.Numerics;
using SixLabors.ImageSharp.MetaData.Profiles.Icc;

namespace SixLabors.ImageSharp.Tests
{
    internal static class IccTestDataProfiles
    {
        public static readonly IccProfileId Header_Random_Id_Value = new IccProfileId(0x84A8D460, 0xC716B6F3, 0x9B0E4C3D, 0xAB95F838);
        public static readonly IccProfileId Profile_Random_Id_Value = new IccProfileId(0x917D6DE6, 0x84C958D1, 0x3BB0F5BB, 0xADD1134F);

        public static readonly byte[] Header_Random_Id_Array =
        {
#if !NETSTANDARD1_1
                0x84, 0xA8, 0xD4, 0x60, 0xC7, 0x16, 0xB6, 0xF3, 0x9B, 0x0E, 0x4C, 0x3D, 0xAB, 0x95, 0xF8, 0x38,
#else
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
#endif
        };

        public static readonly byte[] Profile_Random_Id_Array =
        {
#if !NETSTANDARD1_1
                0x91, 0x7D, 0x6D, 0xE6, 0x84, 0xC9, 0x58, 0xD1, 0x3B, 0xB0, 0xF5, 0xBB, 0xAD, 0xD1, 0x13, 0x4F,
#else
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
#endif
        };

        public static readonly IccProfileHeader Header_Random_Write = CreateHeaderRandomValue(
            562,        // should be overwritten
            new IccProfileId(1, 2, 3, 4),   // should be overwritten
            "ijkl");    // should be overwritten to "acsp"

        public static readonly IccProfileHeader Header_Random_Read = CreateHeaderRandomValue(132,
#if !NETSTANDARD1_1
            Header_Random_Id_Value,
#else
            IccProfileId.Zero,
#endif
            "acsp");

        public static readonly byte[] Header_Random_Array = CreateHeaderRandomArray(132, 0, Header_Random_Id_Array);

        public static IccProfileHeader CreateHeaderRandomValue(uint size, IccProfileId id, string fileSignature)
        {
            return new IccProfileHeader
            {
                Class = IccProfileClass.DisplayDevice,
                CmmType = "abcd",
                CreationDate = new DateTime(1990, 11, 26, 7, 21, 42),
                CreatorSignature = "dcba",
                DataColorSpace = IccColorSpaceType.Rgb,
                DeviceAttributes = IccDeviceAttribute.ChromaBlackWhite | IccDeviceAttribute.OpacityTransparent,
                DeviceManufacturer = 123456789u,
                DeviceModel = 987654321u,
                FileSignature = "acsp",
                Flags = IccProfileFlag.Embedded | IccProfileFlag.Independent,
                Id = id,
                PcsIlluminant = new Vector3(4, 5, 6),
                PrimaryPlatformSignature = IccPrimaryPlatformType.MicrosoftCorporation,
                ProfileConnectionSpace = IccColorSpaceType.CieXyz,
                RenderingIntent = IccRenderingIntent.AbsoluteColorimetric,
                Size = size,
                Version = new Version(4, 3, 0),
            };
        }

        public static byte[] CreateHeaderRandomArray(uint size, uint nrOfEntries, byte[] profileId)
        {
            return ArrayHelper.Concat(
                 new byte[]
                 {
                    (byte)(size >> 24), (byte)(size >> 16), (byte)(size >> 8), (byte)size,     // Size
                    0x61, 0x62, 0x63, 0x64,     // CmmType
                    0x04, 0x30, 0x00, 0x00,     // Version
                    0x6D, 0x6E, 0x74, 0x72,     // Class
                    0x52, 0x47, 0x42, 0x20,     // DataColorSpace
                    0x58, 0x59, 0x5A, 0x20,     // ProfileConnectionSpace
                    0x07, 0xC6, 0x00, 0x0B, 0x00, 0x1A, 0x00, 0x07, 0x00, 0x15, 0x00, 0x2A,       // CreationDate
                    0x61, 0x63, 0x73, 0x70,     // FileSignature
                    0x4D, 0x53, 0x46, 0x54,     // PrimaryPlatformSignature
                    0x00, 0x00, 0x00, 0x01,     // Flags
                    0x07, 0x5B, 0xCD, 0x15,     // DeviceManufacturer
                    0x3A, 0xDE, 0x68, 0xB1,     // DeviceModel
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, // DeviceAttributes
                    0x00, 0x00, 0x00, 0x03,     // RenderingIntent
                    0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,  // PcsIlluminant
                    0x64, 0x63, 0x62, 0x61,     // CreatorSignature
                 },
                 profileId,
                 new byte[]
                 { 
                    // Padding
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00,
                    // Nr of tag table entries (0)
                    (byte)(nrOfEntries >> 24), (byte)(nrOfEntries >> 16), (byte)(nrOfEntries >> 8), (byte)nrOfEntries
                 });
        }

        public static byte[] Profile_Random_Array = ArrayHelper.Concat(CreateHeaderRandomArray(168, 2, Profile_Random_Id_Array),
            new byte[]
            {
                0x00, 0x00, 0x00, 0x00,     // tag signature (Unknown)
                0x00, 0x00, 0x00, 0x9C,     // tag offset (156)
                0x00, 0x00, 0x00, 0x0C,     // tag size (12)
                
                0x00, 0x00, 0x00, 0x00,     // tag signature (Unknown)
                0x00, 0x00, 0x00, 0x9C,     // tag offset (156)
                0x00, 0x00, 0x00, 0x0C,     // tag size (12)
            },
            IccTestDataTagDataEntry.TagDataEntryHeader_UnknownArr,
            IccTestDataTagDataEntry.Unknown_Arr
        );

        public static IccProfile Profile_Random_Val = new IccProfile(CreateHeaderRandomValue(168,
#if !NETSTANDARD1_1
            Profile_Random_Id_Value,
#else
            IccProfileId.Zero,
#endif
            "acsp"),
            new IccTagDataEntry[]
            {
                IccTestDataTagDataEntry.Unknown_Val,
                IccTestDataTagDataEntry.Unknown_Val
            });

        public static byte[] Header_Corrupt1_Array =
        {
            0x81, 0xB1, 0x81, 0xE4, 0x82, 0x16, 0x82, 0x49, 0x82, 0x7B, 0x82, 0xAD, 0x82, 0xDF, 0x83, 0x11,
            0x83, 0x43, 0x83, 0x75, 0x83, 0xA7, 0x83, 0xD8, 0x84, 0x0A, 0x84, 0x3B, 0x84, 0x6C, 0x84, 0x9E,
            0x84, 0xCF, 0x85, 0x00, 0x85, 0x31, 0x85, 0x62, 0x85, 0x93, 0x85, 0xC3, 0x85, 0xF4, 0x86, 0x24,
            0x86, 0x55, 0x86, 0x85, 0x86, 0xB5, 0x86, 0xE6, 0x87, 0x16, 0x87, 0x46, 0x87, 0x76, 0x87, 0xA5,
            0x87, 0xD5, 0x88, 0x05, 0x88, 0x34, 0x88, 0x64, 0x88, 0x93, 0x88, 0xC3, 0x88, 0xF2, 0x89, 0x21,
            0x89, 0x50, 0x89, 0x7F, 0x89, 0xAE, 0x89, 0xDD, 0x8A, 0x0C, 0x8A, 0x3B, 0x8A, 0x69, 0x8A, 0x98,
            0x8A, 0xC6, 0x8A, 0xF5, 0x8B, 0x23, 0x8B, 0x51, 0x8B, 0x7F, 0x8B, 0xAE, 0x8B, 0xDC, 0x8C, 0x09,
            0x8C, 0x37, 0x8C, 0x65, 0x8C, 0x93, 0x8C, 0xC1, 0x8C, 0xEE, 0x8D, 0x1C, 0x8D, 0x49, 0x8D, 0x76,
        };

        public static byte[] Header_Corrupt2_Array =
        {
            0x23, 0x74, 0x6D, 0x6D, 0xB1, 0xBC, 0x28, 0xB2, 0x6D, 0x0B, 0xA3, 0x9C, 0x2D, 0x60, 0x6C, 0xB4,
            0x96, 0xF2, 0x31, 0x88, 0x6C, 0x67, 0x8B, 0xA9, 0x35, 0x31, 0x6C, 0x24, 0x81, 0xAE, 0x38, 0x64,
            0x6B, 0xE9, 0x78, 0xEC, 0x3B, 0x28, 0x6B, 0xB7, 0x71, 0x4F, 0x3D, 0x87, 0x6B, 0x8C, 0x6A, 0xC3,
            0x3F, 0x87, 0x6B, 0x68, 0x65, 0x33, 0x41, 0x30, 0x6B, 0x4A, 0x60, 0x8C, 0x42, 0x8C, 0x6B, 0x32,
            0x5C, 0xB8, 0x43, 0xA2, 0x6B, 0x1F, 0x59, 0xA4, 0x44, 0x79, 0x6B, 0x10, 0x57, 0x3B, 0x45, 0x1A,
            0x6B, 0x05, 0x55, 0x68, 0x45, 0x8D, 0x6A, 0xFE, 0x54, 0x15, 0x45, 0xDA, 0x6A, 0xF9, 0x53, 0x2A,
            0x46, 0x16, 0x6A, 0xF5, 0x52, 0x74, 0x46, 0x27, 0x6A, 0xF4, 0x52, 0x43, 0x46, 0x27, 0x6A, 0xF4,
            0x52, 0x43, 0x46, 0x27, 0x6A, 0xF4, 0x52, 0x43, 0x46, 0x27, 0x6A, 0xF4, 0x52, 0x43, 0x46, 0x27,
        };


        public static object[][] ProfileIdTestData =
        {
            new object[] { Header_Random_Array, Header_Random_Id_Value },
            new object[] { Profile_Random_Array, Profile_Random_Id_Value },
        };

        public static object[][] ProfileValidityTestData =
        {
            new object[] { Header_Corrupt1_Array, false },
            new object[] { Header_Corrupt2_Array, false },
            new object[] { Header_Random_Array, true },
        };
    }
}
